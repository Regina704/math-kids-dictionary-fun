
import { useState, useMemo } from "react";
import { Search, Filter } from "lucide-react";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import Header from "@/components/Header";
import TermCard from "@/components/TermCard";
import { useSearchParams } from "react-router-dom";

const Terms = () => {
  const [searchParams] = useSearchParams();
  const initialSearch = searchParams.get('search') || '';
  const [searchTerm, setSearchTerm] = useState(initialSearch);
  const [selectedCategory, setSelectedCategory] = useState("all");
  const [selectedLetter, setSelectedLetter] = useState("all");

  const allTerms = [
    {
      id: "perimeter",
      title: "–ü–µ—Ä–∏–º–µ—Ç—Ä",
      definition: "–°—É–º–º–∞ –¥–ª–∏–Ω –≤—Å–µ—Ö —Å—Ç–æ—Ä–æ–Ω –º–Ω–æ–≥–æ—É–≥–æ–ª—å–Ω–∏–∫–∞",
      example: "–ü–µ—Ä–∏–º–µ—Ç—Ä –∫–≤–∞–¥—Ä–∞—Ç–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–æ–π 5 —Å–º = 5 + 5 + 5 + 5 = 20 —Å–º",
      category: "–ì–µ–æ–º–µ—Ç—Ä–∏—è"
    },
    {
      id: "fraction",
      title: "–î—Ä–æ–±—å",
      definition: "–ß–∏—Å–ª–æ, –∑–∞–ø–∏—Å–∞–Ω–Ω–æ–µ –≤ –≤–∏–¥–µ a/b, –≥–¥–µ a ‚Äî —á–∏—Å–ª–∏—Ç–µ–ª—å, b ‚Äî –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å",
      example: "3/4 –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Ü–µ–ª–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–æ –Ω–∞ 4 —á–∞—Å—Ç–∏, –≤–∑—è—Ç–æ 3 —á–∞—Å—Ç–∏",
      category: "–ê—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞"
    },
    {
      id: "diagram",
      title: "–î–∏–∞–≥—Ä–∞–º–º–∞",
      definition: "–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –≤–∏–¥–µ —Å—Ç–æ–ª–±—Ü–æ–≤, –∫—Ä—É–≥–æ–≤ –∏–ª–∏ –ª–∏–Ω–∏–π",
      example: "–ö—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —Å–∫–æ–ª—å–∫–æ —É—á–µ–Ω–∏–∫–æ–≤ –≤—ã–±—Ä–∞–ª–∏ —Ä–∞–∑–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã",
      category: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    },
    {
      id: "area",
      title: "–ü–ª–æ—â–∞–¥—å",
      definition: "–†–∞–∑–º–µ—Ä –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏, –∏–∑–º–µ—Ä—è–µ–º—ã–π –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö –µ–¥–∏–Ω–∏—Ü–∞—Ö",
      example: "–ü–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏ 4 —Å–º –∏ 6 —Å–º = 4 √ó 6 = 24 —Å–º¬≤",
      category: "–ì–µ–æ–º–µ—Ç—Ä–∏—è"
    },
    {
      id: "percentage",
      title: "–ü—Ä–æ—Ü–µ–Ω—Ç",
      definition: "–î–æ–ª—è —á–∏—Å–ª–∞, –≤—ã—Ä–∞–∂–µ–Ω–Ω–∞—è –≤ —Å–æ—Ç—ã—Ö —á–∞—Å—Ç—è—Ö –∏ –æ–±–æ–∑–Ω–∞—á–∞–µ–º–∞—è –∑–Ω–∞–∫–æ–º %",
      example: "25% –æ—Ç 100 = 25, –ø–æ—Ç–æ–º—É —á—Ç–æ 25/100 √ó 100 = 25",
      category: "–ê—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞"
    },
    {
      id: "average",
      title: "–°—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ",
      definition: "–°—É–º–º–∞ –≤—Å–µ—Ö —á–∏—Å–µ–ª, –¥–µ–ª—ë–Ω–Ω–∞—è –Ω–∞ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ",
      example: "–°—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ —á–∏—Å–µ–ª 2, 4, 6 = (2+4+6)/3 = 4",
      category: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    }
  ];

  const categories = ["all", ...Array.from(new Set(allTerms.map(term => term.category)))];
  const alphabet = "–ê–ë–í–ì–î–ï–ñ–ó–ò–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–≠–Æ–Ø".split("");

  const filteredTerms = useMemo(() => {
    return allTerms.filter(term => {
      const matchesSearch = term.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                           term.definition.toLowerCase().includes(searchTerm.toLowerCase());
      const matchesCategory = selectedCategory === "all" || term.category === selectedCategory;
      const matchesLetter = selectedLetter === "all" || term.title[0].toUpperCase() === selectedLetter;
      
      return matchesSearch && matchesCategory && matchesLetter;
    });
  }, [searchTerm, selectedCategory, selectedLetter]);

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50">
      <Header />
      
      <div className="container mx-auto px-4 py-8">
        {/* Page Header */}
        <div className="text-center mb-12">
          <h1 className="text-4xl md:text-5xl font-bold bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 bg-clip-text text-transparent mb-4">
            üìñ –í—Å–µ —Ç–µ—Ä–º–∏–Ω—ã
          </h1>
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            –ù–∞–π–¥–∏ –Ω—É–∂–Ω—ã–π –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Ä–º–∏–Ω —Å –ø–æ–º–æ—â—å—é –ø–æ–∏—Å–∫–∞ –∏–ª–∏ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–≥–æ —É–∫–∞–∑–∞—Ç–µ–ª—è
          </p>
        </div>

        {/* Search and Filters */}
        <div className="bg-white/60 backdrop-blur-md rounded-2xl p-6 mb-8 border border-purple-100">
          {/* Search Bar */}
          <div className="flex flex-col md:flex-row gap-4 mb-6">
            <div className="flex-1 relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
              <Input
                type="text"
                placeholder="–ü–æ–∏—Å–∫ —Ç–µ—Ä–º–∏–Ω–æ–≤..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="pl-10 pr-4 py-3 text-lg rounded-xl border-2 border-purple-200 focus:border-purple-400"
              />
            </div>
            
            {/* Category Filter */}
            <Select value={selectedCategory} onValueChange={setSelectedCategory}>
              <SelectTrigger className="w-full md:w-48 py-3 rounded-xl border-2 border-purple-200">
                <Filter className="w-4 h-4 mr-2" />
                <SelectValue placeholder="–ö–∞—Ç–µ–≥–æ—Ä–∏—è" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</SelectItem>
                {categories.slice(1).map(category => (
                  <SelectItem key={category} value={category}>{category}</SelectItem>
                ))}
              </SelectContent>
            </Select>
          </div>

          {/* Alphabet Filter */}
          <div className="space-y-4">
            <h3 className="text-lg font-semibold text-gray-700 flex items-center">
              üî§ –ê–ª—Ñ–∞–≤–∏—Ç–Ω—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å
            </h3>
            <div className="grid grid-cols-6 sm:grid-cols-9 md:grid-cols-12 lg:grid-cols-17 gap-2">
              <Button
                variant={selectedLetter === "all" ? "default" : "outline"}
                onClick={() => setSelectedLetter("all")}
                className="h-10 w-10 p-0 rounded-lg text-sm font-semibold transition-all duration-200 hover:scale-110"
              >
                –í—Å–µ
              </Button>
              {alphabet.map(letter => (
                <Button
                  key={letter}
                  variant={selectedLetter === letter ? "default" : "outline"}
                  onClick={() => setSelectedLetter(letter)}
                  className="h-10 w-10 p-0 rounded-lg text-sm font-semibold transition-all duration-200 hover:scale-110"
                >
                  {letter}
                </Button>
              ))}
            </div>
          </div>
        </div>

        {/* Results */}
        <div className="mb-6">
          <p className="text-lg text-gray-600">
            –ù–∞–π–¥–µ–Ω–æ —Ç–µ—Ä–º–∏–Ω–æ–≤: <span className="font-bold text-purple-600">{filteredTerms.length}</span>
          </p>
        </div>

        {/* Terms Grid */}
        {filteredTerms.length > 0 ? (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {filteredTerms.map((term, index) => (
              <TermCard 
                key={term.id} 
                term={term} 
                delay={index * 100}
              />
            ))}
          </div>
        ) : (
          <div className="text-center py-16">
            <div className="text-6xl mb-4">üîç</div>
            <h3 className="text-2xl font-bold text-gray-700 mb-2">–¢–µ—Ä–º–∏–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
            <p className="text-gray-600 mb-6">–ü–æ–ø—Ä–æ–±—É–π –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä—ã</p>
            <Button
              onClick={() => {
                setSearchTerm("");
                setSelectedCategory("all");
                setSelectedLetter("all");
              }}
              className="bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white px-8 py-3 rounded-full"
            >
              –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
            </Button>
          </div>
        )}
      </div>
    </div>
  );
};

export default Terms;
